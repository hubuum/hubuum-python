name: Docker build, test, and (optionally) push

on:
  push:
    branches:
      - main
      - "*"
  release:
    types:
      - published
  schedule:
    - cron: "15 3 * * 6"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      HUBUUM_DATABASE_USER: postgres
      HUBUUM_DATABASE_PASSWORD: postgres
      HUBUUM_DATABASE_NAME: github_actions
      HUBUUM_DATABASE_HOST: "172.17.0.1"
      BUILDX_NO_DEFAULT_ATTESTATIONS: 1

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set platform tag
        id: set-platform-tag
        run: |
          echo "PLATFORM_TAG=$(echo ${{ matrix.platform }} | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: hubuum:${{ env.PLATFORM_TAG }}
          load: true

      - name: Install QEMU
        run: sudo apt-get update && sudo apt-get install -y qemu-user-static

      - name: Register QEMU arm64
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Run tests
        run: >
          docker run -e MODE=testing
          -e HUBUUM_DATABASE_HOST=${{ env.HUBUUM_DATABASE_HOST }}
          -e HUBUUM_DATABASE_NAME=${{ env.HUBUUM_DATABASE_NAME }}
          -e HUBUUM_DATABASE_PASSWORD=${{ env.HUBUUM_DATABASE_PASSWORD }}
          -e HUBUUM_DATABASE_USER=${{ env.HUBUUM_DATABASE_USER }}
          -e HUBUUM_LOGGING_LEVEL="CRITICAL"
          --platform ${{ matrix.platform }}
          hubuum:${{ env.PLATFORM_TAG }}

      - name: Save Docker images as artifacts
        run: |
          mkdir -p hubuum_artifact
          docker save hubuum:${{ env.PLATFORM_TAG }} | gzip > hubuum_artifact/hubuum-${{ env.PLATFORM_TAG }}.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: hubuum-${{ env.PLATFORM_TAG }}
          path: hubuum_artifact/hubuum-${{ env.PLATFORM_TAG }}.tar.gz

  push:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      BUILDX_NO_DEFAULT_ATTESTATIONS: 1

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Docker image artifacts
        uses: actions/download-artifact@v4
        with:
          name: hubuum-linux-amd64
          path: hubuum_artifact/linux-amd64

      - name: Download Docker image artifacts
        uses: actions/download-artifact@v4
        with:
          name: hubuum-linux-arm64
          path: hubuum_artifact/linux-arm64

      - name: Load Docker images
        run: |
          gzip -dc hubuum_artifact/linux-amd64/hubuum-linux-amd64.tar.gz | docker load
          gzip -dc hubuum_artifact/linux-arm64/hubuum-linux-arm64.tar.gz | docker load

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: terjekv
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actorÂ }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            terjekv/hubuum
            ghcr.io/hubuum/hubuum
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{version}},value=latest
            type=raw,value=develop,enable=${{ endsWith(GitHub.ref, 'refs/heads/main') }}

      - name: Push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
