[tox]
minversion = 4
isolated_build = true
skip_missing_interpreters = true
toxworkdir = {env:TOX_WORKDIR:.tox}
envlist =
    lint
    coverage
    report
    docs
    python{37,38,39,310}-django32-{sqlite,postgres}
    python{38,39,310}-django40-{sqlite,postgres}
    python{39,310,311}-django41-{sqlite,postgres}
    python{39,310,311,312}-django42-{sqlite,postgres}
    python{310,311,312}-djangomain-{sqlite,postgres}
    clean

[gh-actions]
python =
    3.7: python37
    3.8: python38
    3.9: python39
    3.10: python310
    3.11: python311
    3.12: python312

[testenv:lint]
skip_install = true
description = Invoke black and ruff on the project.
allowlist_externals = poetry
commands =
#    poetry install -q
    poetry run black hubuum/ hubuumsite/ 
    poetry run ruff check --fix hubuum/ hubuumsite/

[testenv]
description = Run tests against {envname}.
setenv =
    DJANGO_SETTINGS_MODULE = hubuumsite.settings
    HUBUUM_DATABASE_NAME = hubuum
    postgres: HUBUUM_DATABASE_ENGINE = django.db.backends.postgresql
    postgres: HUBUUM_TESTING_PARALLEL = 2
#    mysql: HUBUUM_DATABASE_ENGINE = django.db.backends.mysql
#    mysql: HUBUUM_TESTING_PARALLEL = 2
    sqlite: HUBUUM_DATABASE_ENGINE = django.db.backends.sqlite3
    sqlite: HUBUUM_DATABASE_NAME = {envtmpdir}/hubuum.db
    sqlite: HUBUUM_TESTING_PARALLEL = auto
passenv = HUBUUM_*, GITHUB_*
basepython =
    python37: python3.7
    python38: python3.8
    python39: python3.9
    python310: python3.10
    python311: python3.11
    python312: python3.12
deps =
    django22: Django>=2.2,<2.3
    django32: Django>=3.2,<3.3
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2
    django42: Django>=4.2.a1,<4.3
    djangomain: https://github.com/django/django/archive/main.tar.gz
allowlist_externals =
    python
    poetry
    pytest
commands =
    poetry install --only dev
    poetry run python --version
    poetry run python -m django --version
    poetry run pytest -n "{env:HUBUUM_TESTING_PARALLEL}" {toxinidir}/hubuum/tests/ {toxinidir}/hubuum/api/v1/tests/

[testenv:clean]
description = Remove coverage data
deps = coverage
skip_install = true
allowlist_externals =
    coverage
    rm
commands =
    coverage erase
    rm -rf attachments

[testenv:coverage]
description = Generate coverage data
setenv = DJANGO_SETTINGS_MODULE=hubuumsite.settings
passenv = HUBUUM_*, GITHUB_*
skip_install = true
allowlist_externals = poetry
commands = poetry run coverage run --source hubuum,hubuumsite --module pytest hubuum

[testenv:report]
description = Report coverage data
skip_install = true
allowlist_externals = poetry 
commands =
    poetry run python --version
    poetry run coverage report -m

[testenv:docs]
description = Build documentation
setenv =
    API_VERSION=1
    FILE=docs/hubuum-api-v{env:API_VERSION}.json
    TITLE=Hubuum API v{env:API_VERSION}
    DESC=Swagger for Hubuum API v{env:API_VERSION}, generated by django generateschema.
    FORMAT=openapi-json
    DJANGO_SETTINGS_MODULE=hubuumsite.settings
passenv = HUBUUM_*, GITHUB_*
allowlist_externals = 
    mkdocs
    python
    poetry
commands =
    poetry install --with dev,docs
    poetry run python manage.py generateschema --file "{env:FILE}" --format "{env:FORMAT}" \
        --title "{env:TITLE}" --description "{env:DESC}"
    poetry run mkdocs build -q

[testenv:docker]
description = Build docker container and run tests in it
setenv = DJANGO_SETTINGS_MODULE=hubuumsite.settings
passenv = HUBUUM_*, GITHUB_*
# Docker may require IP and not a hostname, as DNS may or may not work as intended.
allowlist_externals = docker
commands =
    docker build -t hubuum_local_test --build-arg ENVIRONMENT=testing .
    docker run -e MODE=testing \
        -e HUBUUM_DATABASE_NAME="{env:HUBUUM_DATABASE_NAME}" \
        -e HUBUUM_DATABASE_USER="{env:HUBUUM_DATABASE_USER}" \
        -e HUBUUM_DATABASE_PASSWORD="{env:HUBUUM_DATABASE_PASSWORD}" \
        -e HUBUUM_DATABASE_PORT="{env:HUBUUM_DATABASE_PORT}" \
        -e HUBUUM_DATABASE_HOST="{env:HUBUUM_DATABASE_HOST_IP}" \
        -e HUBUUM_LOGGING_LEVEL="CRITICAL" \
        -p 8099:8099 hubuum_local_test 

[testenv:dockerx]
description = Build docker container and run tests in it, but with buildx and multiarch
setenv = DJANGO_SETTINGS_MODULE=hubuumsite.settings
passenv = HUBUUM_*, GITHUB_*
allowlist_externals = docker
commands = 
    docker buildx build --platform linux/amd64 -t hubuum:amd64-latest-testing --build-arg ENVIRONMENT=testing --progress plain --load -f Dockerfile .
    docker buildx build --platform linux/arm64 -t hubuum:arm64-latest-testing --build-arg ENVIRONMENT=testing --progress plain --load -f Dockerfile .

    docker run -e MODE=testing \
        -e HUBUUM_DATABASE_NAME="{env:HUBUUM_DATABASE_NAME}" \
        -e HUBUUM_DATABASE_USER="{env:HUBUUM_DATABASE_USER}" \
        -e HUBUUM_DATABASE_PASSWORD="{env:HUBUUM_DATABASE_PASSWORD}" \
        -e HUBUUM_DATABASE_PORT="{env:HUBUUM_DATABASE_PORT}" \
        -e HUBUUM_DATABASE_HOST="{env:HUBUUM_DATABASE_HOST_IP}" \
        -e HUBUUM_LOGGING_LEVEL="CRITICAL" \
        -p 8099:8099 hubuum:amd64-latest-testing
    
    docker run -e MODE=testing \
        -e HUBUUM_DATABASE_NAME="{env:HUBUUM_DATABASE_NAME}" \
        -e HUBUUM_DATABASE_USER="{env:HUBUUM_DATABASE_USER}" \
        -e HUBUUM_DATABASE_PASSWORD="{env:HUBUUM_DATABASE_PASSWORD}" \
        -e HUBUUM_DATABASE_PORT="{env:HUBUUM_DATABASE_PORT}" \
        -e HUBUUM_DATABASE_HOST="{env:HUBUUM_DATABASE_HOST_IP}" \
        -e HUBUUM_LOGGING_LEVEL="CRITICAL" \
        -p 8099:8099 hubuum:arm64-latest-testing

[testenv:python310-djangomain-sqlite]
ignore_outcome = true

[testenv:python310-djangomain-postgres]
ignore_outcome = true

[testenv:python311-djangomain-sqlite]
ignore_outcome = true

[testenv:python311-djangomain-postgres]
ignore_outcome = true

[testenv:python312-djangomain-sqlite]
ignore_outcome = true

[testenv:python312-djangomain-postgres]
ignore_outcome = true
